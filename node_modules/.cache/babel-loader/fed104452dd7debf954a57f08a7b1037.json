{"ast":null,"code":"// constants\nimport Web3 from \"web3\";\nimport LipToken from \"../../contracts/LipToken.json\"; // log\n\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\"\n  };\n};\n\nconst connectSuccess = payload => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload\n  };\n};\n\nconst connectFailed = payload => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload\n  };\n};\n\nconst updateAccountRequest = payload => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload\n  };\n};\n\nexport const sendTransaction = (_account, _to) => {\n  let params = [{\n    \"from\": _account,\n    \"to\": _to,\n    \"gas\": Number(30000).toString(16),\n    \"gasPrice\": Number(25000000).toString(16),\n    \"value\": Number(1000000000000000).toString(16)\n  }];\n  window.ethereum.request({\n    method: \"eth_sendTransaction\",\n    params\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const connect = () => {\n  return async dispatch => {\n    dispatch(connectRequest());\n\n    if (window.ethereum) {\n      let web3 = new Web3(window.ethereum);\n\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccountsetamas\"\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n        console.log(networkId);\n        const lipTokenNetworkData = await LipToken.networks[networkId];\n\n        if (lipTokenNetworkData) {\n          const lipToken = new web3.eth.Contract(LipToken.abi, lipTokenNetworkData.address);\n          dispatch(connectSuccess({\n            account: accounts[0],\n            lipToken: lipToken,\n            web3: web3\n          })); // Add listeners start\n\n          console.log(\"This is accont :\" + accounts[0]);\n          console.log(lipToken);\n          window.ethereum.on(\"accountsChanged\", accounts => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          }); // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Polygon.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\nexport const updateAccount = account => {\n  return async dispatch => {\n    dispatch(updateAccountRequest({\n      account: account\n    }));\n    dispatch(fetchData(account));\n  };\n};","map":{"version":3,"names":["Web3","LipToken","fetchData","connectRequest","type","connectSuccess","payload","connectFailed","updateAccountRequest","sendTransaction","_account","_to","params","Number","toString","window","ethereum","request","method","catch","err","console","log","connect","dispatch","web3","accounts","networkId","lipTokenNetworkData","networks","lipToken","eth","Contract","abi","address","account","on","updateAccount","location","reload"],"sources":["/home/khangnt-leo/GR1-Project/nft-generate/nft_game/src/redux/blockchain/blockchainActions.js"],"sourcesContent":["// constants\nimport Web3 from \"web3\";\nimport LipToken from \"../../contracts/LipToken.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const sendTransaction = (_account,_to)=>{\n  let params = [{\n    \"from\" : _account,\n    \"to\" : _to,\n    \"gas\" : Number(30000).toString(16),\n    \"gasPrice\" : Number(25000000).toString(16),\n    \"value\" : Number(1000000000000000).toString(16),\n  }]\n\n  window.ethereum.request({\n    method : \"eth_sendTransaction\",params\n  }).catch((err) => {\n    console.log(err);\n  })\n}\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    if (window.ethereum) {\n      let web3 = new Web3(window.ethereum);\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccountsetamas\",\n        });\n        const networkId = await window.ethereum.request({\n          method: \"net_version\",\n        });\n        console.log(networkId);\n        const lipTokenNetworkData = await LipToken.networks[networkId];\n        if (lipTokenNetworkData) {\n          const lipToken = new web3.eth.Contract(\n            LipToken.abi,\n            lipTokenNetworkData.address\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              lipToken: lipToken,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          console.log(\"This is accont :\"+accounts[0]);\n          console.log(lipToken);\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Polygon.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}